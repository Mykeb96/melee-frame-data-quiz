{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mykael Barnes\\\\Desktop\\\\Projects\\\\Melee Frame Data Quiz\\\\melee_quiz\\\\src\\\\components\\\\Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { questions } from './Questions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet counter = 0;\nlet quizOrder = [];\nconst questionNumbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29];\n\nconst Quiz = () => {\n  _s();\n\n  const [fetchedQuestions, setFetchedQuestions] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [triggerChange, setTriggerChange] = useState(false);\n  const [testCompleted, setTestCompleted] = useState(false);\n  const [currentChoice, setCurrentChoice] = useState('');\n  var choiceA = document.getElementById('choiceA');\n  var choiceB = document.getElementById('choiceB');\n  var choiceC = document.getElementById('choiceC');\n  var choiceD = document.getElementById('choiceD');\n\n  const output = e => {\n    e.stopPropagation();\n    e.preventDefault();\n    console.log(choiceA.value);\n  };\n\n  if (choiceA) {\n    choiceA.addEventListener(\"click\", output, true);\n  }\n\n  function shuffleArray() {\n    for (var i = questionNumbers.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = questionNumbers[i];\n      questionNumbers[i] = questionNumbers[j];\n      questionNumbers[j] = temp;\n    }\n\n    for (let i = 0; i < 30; i++) {\n      quizOrder.push(questionNumbers[i]);\n    }\n  }\n\n  useEffect(() => {\n    shuffleArray();\n    setIsLoading(false);\n  }, []);\n\n  const handleQuestionChange = () => {\n    counter += 1;\n    console.log(counter);\n    setTriggerChange(!triggerChange);\n\n    if (counter == 29) {\n      setTestCompleted(true);\n    }\n  };\n\n  const checkAnswer = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-question-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isLoading ? 'loading question...' : questions[quizOrder[counter]].question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"choiceA\",\n      value: \"choiceA\",\n      children: isLoading ? 'loading choice...' : questions[quizOrder[counter]].choiceA\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"choiceB\",\n      value: \"choiceB\",\n      children: isLoading ? 'loading choice...' : questions[quizOrder[counter]].choiceB\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"choiceC\",\n      value: \"choiceC\",\n      children: isLoading ? 'loading choice...' : questions[quizOrder[counter]].choiceC\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"choiceD\",\n      value: \"choiceD\",\n      children: isLoading ? 'loading choice...' : questions[quizOrder[counter]].choiceD\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), testCompleted ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log(\"You've completed the test!\"),\n      children: \"Finish Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 26\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleQuestionChange,\n      children: \"Next Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 115\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Quiz, \"w0q1pgUtNylWeIWYkwchEiseI/g=\");\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["C:/Users/Mykael Barnes/Desktop/Projects/Melee Frame Data Quiz/melee_quiz/src/components/Quiz.js"],"names":["React","useEffect","useState","questions","counter","quizOrder","questionNumbers","Quiz","fetchedQuestions","setFetchedQuestions","isLoading","setIsLoading","triggerChange","setTriggerChange","testCompleted","setTestCompleted","currentChoice","setCurrentChoice","choiceA","document","getElementById","choiceB","choiceC","choiceD","output","e","stopPropagation","preventDefault","console","log","value","addEventListener","shuffleArray","i","length","j","Math","floor","random","temp","push","handleQuestionChange","checkAnswer","question"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useEffect, useState } from 'react'\r\nimport { questions } from './Questions'\r\n\r\nlet counter = 0\r\nlet quizOrder = []\r\nconst questionNumbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]\r\n\r\nconst Quiz = () => {\r\n\r\n\r\n    const [fetchedQuestions, setFetchedQuestions] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [triggerChange, setTriggerChange] = useState(false)\r\n    const [testCompleted, setTestCompleted] = useState(false)\r\n    const [currentChoice, setCurrentChoice] = useState('')\r\n\r\n    var choiceA = document.getElementById('choiceA')\r\n    var choiceB = document.getElementById('choiceB')\r\n    var choiceC = document.getElementById('choiceC')\r\n    var choiceD = document.getElementById('choiceD')\r\n\r\n    const output = (e) => {\r\n        e.stopPropagation()\r\n        e.preventDefault()\r\n        console.log(choiceA.value)\r\n\r\n        \r\n    }\r\n\r\n    if(choiceA){\r\n        choiceA.addEventListener(\"click\", output, true)\r\n        \r\n        \r\n    }\r\n\r\n\r\n\r\n    function shuffleArray() {\r\n        for (var i = questionNumbers.length - 1; i > 0; i--) {\r\n            var j = Math.floor(Math.random() * (i + 1));\r\n            var temp = questionNumbers[i];\r\n            questionNumbers[i] = questionNumbers[j];\r\n            questionNumbers[j] = temp;\r\n        }\r\n\r\n        for (let i = 0; i < 30; i++){\r\n            quizOrder.push(questionNumbers[i])\r\n        }\r\n\r\n        \r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        shuffleArray();\r\n        setIsLoading(false)\r\n        \r\n    },[])\r\n\r\n\r\n    const handleQuestionChange = () => {\r\n\r\n        counter += 1\r\n        console.log(counter)\r\n        setTriggerChange(!triggerChange)\r\n\r\n        if (counter == 29) {\r\n            setTestCompleted(true)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const checkAnswer = () => {\r\n\r\n        \r\n    }\r\n\r\n\r\n  return (\r\n    <div className='quiz-question-container'>\r\n\r\n        <h2>{isLoading ? 'loading question...' : questions[quizOrder[counter]].question}</h2>\r\n        <button id='choiceA' value='choiceA'>{isLoading ? 'loading choice...' : questions[quizOrder[counter]].choiceA}</button>\r\n        <button id='choiceB' value='choiceB'>{isLoading ? 'loading choice...' : questions[quizOrder[counter]].choiceB}</button>\r\n        <button id='choiceC' value='choiceC'>{isLoading ? 'loading choice...' : questions[quizOrder[counter]].choiceC}</button>\r\n        <button id='choiceD' value='choiceD'>{isLoading ? 'loading choice...' : questions[quizOrder[counter]].choiceD}</button>\r\n\r\n        {testCompleted ? <button onClick={() => console.log(\"You've completed the test!\")}>Finish Quiz</button> : <button onClick={handleQuestionChange}>Next Question</button>}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Quiz"]},"metadata":{},"sourceType":"module"}