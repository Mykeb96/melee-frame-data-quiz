{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mykael Barnes\\\\Desktop\\\\Projects\\\\Melee Frame Data Quiz\\\\melee_quiz\\\\src\\\\components\\\\Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { questions } from './Questions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Quiz = () => {\n  _s();\n\n  const [fetchedQuestions, setFetchedQuestions] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [triggerChange, setTriggerChange] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  let quizOrder = [];\n  useEffect(() => {\n    const quizOrderGenerator = Array(30).fill().map((_, index) => index + 1);\n    quizOrderGenerator.sort(() => Math.random() - 0.5);\n    console.log(quizOrderGenerator);\n\n    for (let i = 0; i < 30; i++) {\n      quizOrder.push(quizOrderGenerator[i]);\n    }\n\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    // console.log(quizOrder)\n    console.log(questions[quizOrder[0]]);\n    console.log(questions[quizOrder[1]]);\n    console.log(questions[quizOrder[2]]);\n    console.log(questions[quizOrder[3]]);\n    console.log(questions[quizOrder[4]]);\n    console.log(questions[quizOrder[5]]);\n    console.log(questions[quizOrder[6]]);\n    console.log(questions[quizOrder[7]]);\n    console.log(questions[quizOrder[8]]);\n    console.log(questions[quizOrder[9]]);\n    console.log(questions[quizOrder[10]]);\n    console.log(questions[quizOrder[11]]);\n    console.log(questions[quizOrder[12]]);\n    console.log(questions[quizOrder[13]]);\n    console.log(questions[quizOrder[14]]);\n    console.log(questions[quizOrder[15]]);\n    console.log(questions[quizOrder[16]]);\n    console.log(questions[quizOrder[17]]);\n    console.log(questions[quizOrder[18]]);\n    console.log(questions[quizOrder[19]]);\n    console.log(questions[quizOrder[20]]);\n    console.log(questions[quizOrder[21]]);\n    console.log(questions[quizOrder[22]]);\n    console.log(questions[quizOrder[23]]);\n    console.log(questions[quizOrder[24]]);\n    console.log(questions[quizOrder[25]]);\n    console.log(questions[quizOrder[26]]);\n    console.log(questions[quizOrder[27]]);\n    console.log(questions[quizOrder[28]]);\n    console.log(questions[quizOrder[29]]);\n  }, [triggerChange]);\n  let i = 0;\n\n  const handleQuestionChange = () => {\n    i += 1;\n    setTriggerChange(!triggerChange);\n    console.log(i);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-question-container\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleQuestionChange,\n      children: \"Next Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Quiz, \"hCHIF23vowQAqDmVpEWNCWvNQNw=\");\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["C:/Users/Mykael Barnes/Desktop/Projects/Melee Frame Data Quiz/melee_quiz/src/components/Quiz.js"],"names":["React","useEffect","useState","questions","Quiz","fetchedQuestions","setFetchedQuestions","isLoading","setIsLoading","triggerChange","setTriggerChange","currentQuestion","setCurrentQuestion","quizOrder","quizOrderGenerator","Array","fill","map","_","index","sort","Math","random","console","log","i","push","handleQuestionChange"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useEffect, useState } from 'react'\r\nimport { questions } from './Questions'\r\n\r\nconst Quiz = () => {\r\n\r\n\r\n    const [fetchedQuestions, setFetchedQuestions] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [triggerChange, setTriggerChange] = useState(false)\r\n    const [currentQuestion, setCurrentQuestion] = useState(0)\r\n\r\n  \r\n    \r\n\r\n    let quizOrder = []\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const quizOrderGenerator = Array(30).fill().map((_, index) => index + 1);\r\n        quizOrderGenerator.sort(() => Math.random() - 0.5);\r\n        console.log(quizOrderGenerator)\r\n        \r\n        for (let i = 0; i < 30; i++) {\r\n        quizOrder.push(quizOrderGenerator[i])\r\n        }\r\n        \r\n        setIsLoading(false)\r\n        \r\n    },[])\r\n\r\n    useEffect(() => {\r\n        \r\n        \r\n        // console.log(quizOrder)\r\n        console.log(questions[quizOrder[0]])\r\n        console.log(questions[quizOrder[1]])\r\n        console.log(questions[quizOrder[2]])\r\n        console.log(questions[quizOrder[3]])\r\n        console.log(questions[quizOrder[4]])\r\n        console.log(questions[quizOrder[5]])\r\n        console.log(questions[quizOrder[6]])\r\n        console.log(questions[quizOrder[7]])\r\n        console.log(questions[quizOrder[8]])\r\n        console.log(questions[quizOrder[9]])\r\n        console.log(questions[quizOrder[10]])\r\n        console.log(questions[quizOrder[11]])\r\n        console.log(questions[quizOrder[12]])\r\n        console.log(questions[quizOrder[13]])\r\n        console.log(questions[quizOrder[14]])\r\n        console.log(questions[quizOrder[15]])\r\n        console.log(questions[quizOrder[16]])\r\n        console.log(questions[quizOrder[17]])\r\n        console.log(questions[quizOrder[18]])\r\n        console.log(questions[quizOrder[19]])\r\n        console.log(questions[quizOrder[20]])\r\n        console.log(questions[quizOrder[21]])\r\n        console.log(questions[quizOrder[22]])\r\n        console.log(questions[quizOrder[23]])\r\n        console.log(questions[quizOrder[24]])\r\n        console.log(questions[quizOrder[25]])\r\n        console.log(questions[quizOrder[26]])\r\n        console.log(questions[quizOrder[27]])\r\n        console.log(questions[quizOrder[28]])\r\n        console.log(questions[quizOrder[29]])\r\n\r\n\r\n    },[triggerChange])\r\n\r\n    let i = 0\r\n\r\n    const handleQuestionChange = () => {\r\n        i += 1\r\n        setTriggerChange(!triggerChange)\r\n        console.log(i)\r\n    }\r\n\r\n    \r\n\r\n\r\n  return (\r\n    <div className='quiz-question-container'>\r\n        {/* <h2>{isLoading ? 'loading question...' : fetchedQuestion.question}</h2>\r\n        <button>{isLoading ? 'loading choice...' : fetchedQuestion.choiceA}</button>\r\n        <button>{isLoading ? 'loading choice...' : fetchedQuestion.choiceB}</button>\r\n        <button>{isLoading ? 'loading choice...' : fetchedQuestion.choiceC}</button>\r\n        <button>{isLoading ? 'loading choice...' : fetchedQuestion.choiceD}</button> */}\r\n\r\n        {/* <h2>{questions[quizOrder[1]].question}</h2> */}\r\n        <button onClick={handleQuestionChange}>Next Question</button>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Quiz"]},"metadata":{},"sourceType":"module"}