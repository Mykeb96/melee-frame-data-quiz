{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mykael Barnes\\\\Desktop\\\\Projects\\\\Melee Frame Data Quiz\\\\melee_quiz\\\\src\\\\components\\\\CompletedPage.js\";\nimport React from 'react';\nimport { VscDebugRestart } from 'react-icons/vsc';\nimport { AiFillQuestionCircle } from 'react-icons/ai';\nimport MicroModal from 'react-micro-modal';\nimport questions from './Questions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CompletedPage = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"completed-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"You've Completed the Test!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"You Guessed \", props.points, \" Questions \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 50\n      }, this), \" of the 30 Correctly!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"restart-button\",\n      onClick: () => {\n        props.setPoints(0);\n      },\n      href: \"/\",\n      children: /*#__PURE__*/_jsxDEV(VscDebugRestart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tooltip2\",\n      children: [/*#__PURE__*/_jsxDEV(MicroModal, {\n        style: {\n          color: 'blue'\n        },\n        trigger: open => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: open,\n          children: /*#__PURE__*/_jsxDEV(AiFillQuestionCircle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 110\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 90\n        }, this),\n        children: close => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-container\",\n          children: [questions.questions.map((element, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n            style: props.wrongQuestions.includes(element.question) ? {\n              color: 'red'\n            } : {\n              color: 'green'\n            },\n            children: questions.questions[index].question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 232\n          }, this)), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: close,\n            children: \"close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 371\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 154\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 35\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tooltiptext\",\n        children: \"^\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tooltiptext\",\n        id: \"test\",\n        children: \"*Wrong Questions*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CompletedPage;\nexport default CompletedPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompletedPage\");","map":{"version":3,"sources":["C:/Users/Mykael Barnes/Desktop/Projects/Melee Frame Data Quiz/melee_quiz/src/components/CompletedPage.js"],"names":["React","VscDebugRestart","AiFillQuestionCircle","MicroModal","questions","CompletedPage","props","points","setPoints","color","open","close","map","element","index","wrongQuestions","includes","question"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,iBAAhC;AACA,SAASC,oBAAT,QAAqC,gBAArC;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAI/B,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,iCAAiBA,KAAK,CAACC,MAAvB,8BAAyC;AAAA;AAAA;AAAA;AAAA,cAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII;AAAG,MAAA,SAAS,EAAC,gBAAb;AAA8B,MAAA,OAAO,EAAE,MAAM;AAC3CD,QAAAA,KAAK,CAACE,SAAN,CAAgB,CAAhB;AAED,OAHD;AAGG,MAAA,IAAI,EAAC,GAHR;AAAA,6BAGY,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAHZ;AAAA;AAAA;AAAA;AAAA,YAJJ,eASI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BAA0B,QAAC,UAAD;AAAY,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR,SAAnB;AAAoC,QAAA,OAAO,EAAGC,IAAD,iBAAU;AAAK,UAAA,OAAO,EAAEA,IAAd;AAAA,iCAAoB,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAApB;AAAA;AAAA;AAAA;AAAA,gBAAvD;AAAA,kBAA6GC,KAAD,iBAAW;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,qBAAkCP,SAAS,CAACA,SAAV,CAAoBQ,GAApB,CAAwB,CAACC,OAAD,EAAUC,KAAV,kBAAoB;AAAG,YAAA,KAAK,EAAER,KAAK,CAACS,cAAN,CAAqBC,QAArB,CAA8BH,OAAO,CAACI,QAAtC,IAAkD;AAACR,cAAAA,KAAK,EAAE;AAAR,aAAlD,GAAmE;AAACA,cAAAA,KAAK,EAAE;AAAR,aAA7E;AAAA,sBAAgGL,SAAS,CAACA,SAAV,CAAoBU,KAApB,EAA2BG;AAA3H;AAAA;AAAA;AAAA;AAAA,kBAA5C,CAAlC,oBAAyN;AAAQ,YAAA,OAAO,EAAEN,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAzN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAvH;AAAA;AAAA;AAAA;AAAA,cAA1B,eACE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAA8B,QAAA,EAAE,EAAC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAtBD;;KAAMN,a;AAwBN,eAAeA,aAAf","sourcesContent":["import React from 'react'\r\nimport { VscDebugRestart } from 'react-icons/vsc'\r\nimport { AiFillQuestionCircle } from 'react-icons/ai'\r\nimport MicroModal from 'react-micro-modal';\r\nimport questions from './Questions'\r\n\r\nconst CompletedPage = (props) => {\r\n  \r\n  \r\n\r\n  return (\r\n    <div className='completed-container'>\r\n        <h1>You've Completed the Test!</h1>\r\n        <h2>You Guessed {props.points} Questions <br /> of the 30 Correctly!</h2>\r\n\r\n        <a className='restart-button' onClick={() => {\r\n          props.setPoints(0)\r\n          \r\n        }} href='/'><VscDebugRestart /></a>\r\n\r\n        <div className='tooltip2'><MicroModal style={{color: 'blue'}} trigger={(open) => <div onClick={open}><AiFillQuestionCircle /></div>}>{(close) => <div className='modal-container'>{questions.questions.map((element, index) => <p style={props.wrongQuestions.includes(element.question) ? {color: 'red'} : {color: 'green'}}>{questions.questions[index].question}</p>)} <button onClick={close}>close</button></div>}</MicroModal>\r\n          <span className='tooltiptext'>^</span>\r\n          <span className='tooltiptext' id='test'>*Wrong Questions*</span>\r\n\r\n\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CompletedPage"]},"metadata":{},"sourceType":"module"}