{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mykael Barnes\\\\Desktop\\\\Projects\\\\Melee Frame Data Quiz\\\\melee_quiz\\\\src\\\\components\\\\Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { questions } from './Questions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet counter = 0;\nlet quizOrder = [];\nconst questionNumbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29];\n\nconst Quiz = () => {\n  _s();\n\n  const [fetchedQuestions, setFetchedQuestions] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [triggerChange, setTriggerChange] = useState(false);\n  const [testCompleted, setTestCompleted] = useState(false);\n  const [currentChoice, setCurrentChoice] = useState('');\n  var choiceA = document.getElementById('choiceA');\n  var choiceB = document.getElementById('choiceB');\n  var choiceC = document.getElementById('choiceC');\n  var choiceD = document.getElementById('choiceD'); // const output = (e) => {\n  //     if ()\n  //     setCurrentChoice(choiceA.value)\n  // }\n  // if(choiceA){\n  //     choiceA.addEventListener(\"click\", output, true)\n  // }\n  // if(choiceB){\n  //     choiceB.addEventListener(\"click\", output, true)\n  // }\n  // if(choiceC){\n  //     choiceC.addEventListener(\"click\", output, true)\n  // }\n  // if(choiceD){\n  //     choiceD.addEventListener(\"click\", output, true)\n  // }\n\n  function shuffleArray() {\n    for (var i = questionNumbers.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = questionNumbers[i];\n      questionNumbers[i] = questionNumbers[j];\n      questionNumbers[j] = temp;\n    }\n\n    for (let i = 0; i < 30; i++) {\n      quizOrder.push(questionNumbers[i]);\n    }\n  }\n\n  useEffect(() => {\n    shuffleArray();\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {// console.log(currentChoice)\n  }, [currentChoice]);\n\n  const handleQuestionChange = () => {\n    counter += 1;\n    console.log(counter);\n    setTriggerChange(!triggerChange);\n\n    if (counter == 29) {\n      setTestCompleted(true);\n    }\n  };\n\n  const checkAnswer = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-question-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isLoading ? 'loading question...' : questions[quizOrder[counter]].question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"choiceA\",\n      value: \"choiceA\",\n      onClick: () => {\n        setCurrentChoice(choiceA.value);\n        console.log(questions[quizOrder[counter]].correctChoice + choiceA.value);\n\n        if ('choiceA' == questions[quizOrder[counter].correctChoice]) {\n          console.log('You made the Correct Choice!');\n        } else {\n          console.log('someonething went wrong!');\n        }\n\n        console.log(currentChoice);\n      },\n      children: isLoading ? 'loading choice...' : questions[quizOrder[counter]].choiceA\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"choiceB\",\n      value: \"choiceB\",\n      children: isLoading ? 'loading choice...' : questions[quizOrder[counter]].choiceB\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"choiceC\",\n      value: \"choiceC\",\n      children: isLoading ? 'loading choice...' : questions[quizOrder[counter]].choiceC\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"choiceD\",\n      value: \"choiceD\",\n      children: isLoading ? 'loading choice...' : questions[quizOrder[counter]].choiceD\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), testCompleted ? /*#__PURE__*/_jsxDEV(\"button\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/completed\",\n        children: \"Finish Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 26\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleQuestionChange,\n      children: \"Next Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 82\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Quiz, \"MRR2NG9gAvPMRMCZNKsQnM58uWc=\");\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["C:/Users/Mykael Barnes/Desktop/Projects/Melee Frame Data Quiz/melee_quiz/src/components/Quiz.js"],"names":["React","useEffect","useState","questions","counter","quizOrder","questionNumbers","Quiz","fetchedQuestions","setFetchedQuestions","isLoading","setIsLoading","triggerChange","setTriggerChange","testCompleted","setTestCompleted","currentChoice","setCurrentChoice","choiceA","document","getElementById","choiceB","choiceC","choiceD","shuffleArray","i","length","j","Math","floor","random","temp","push","handleQuestionChange","console","log","checkAnswer","question","value","correctChoice"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useEffect, useState } from 'react'\r\nimport { questions } from './Questions'\r\n\r\nlet counter = 0\r\nlet quizOrder = []\r\nconst questionNumbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]\r\n\r\nconst Quiz = () => {\r\n\r\n\r\n    const [fetchedQuestions, setFetchedQuestions] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [triggerChange, setTriggerChange] = useState(false)\r\n    const [testCompleted, setTestCompleted] = useState(false)\r\n    const [currentChoice, setCurrentChoice] = useState('')\r\n\r\n    var choiceA = document.getElementById('choiceA')\r\n    var choiceB = document.getElementById('choiceB')\r\n    var choiceC = document.getElementById('choiceC')\r\n    var choiceD = document.getElementById('choiceD')\r\n\r\n    // const output = (e) => {\r\n        \r\n    //     if ()\r\n    //     setCurrentChoice(choiceA.value)\r\n\r\n\r\n        \r\n    // }\r\n\r\n    // if(choiceA){\r\n    //     choiceA.addEventListener(\"click\", output, true)\r\n \r\n    // }\r\n    // if(choiceB){\r\n    //     choiceB.addEventListener(\"click\", output, true)\r\n \r\n    // }\r\n    // if(choiceC){\r\n    //     choiceC.addEventListener(\"click\", output, true)\r\n \r\n    // }\r\n    // if(choiceD){\r\n    //     choiceD.addEventListener(\"click\", output, true)\r\n \r\n    // }\r\n\r\n\r\n\r\n    function shuffleArray() {\r\n        for (var i = questionNumbers.length - 1; i > 0; i--) {\r\n            var j = Math.floor(Math.random() * (i + 1));\r\n            var temp = questionNumbers[i];\r\n            questionNumbers[i] = questionNumbers[j];\r\n            questionNumbers[j] = temp;\r\n        }\r\n\r\n        for (let i = 0; i < 30; i++){\r\n            quizOrder.push(questionNumbers[i])\r\n        }\r\n\r\n        \r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        shuffleArray();\r\n        setIsLoading(false)\r\n        \r\n    },[])\r\n\r\n    useEffect(() => {\r\n        // console.log(currentChoice)\r\n    },[currentChoice])\r\n\r\n\r\n    const handleQuestionChange = () => {\r\n\r\n        counter += 1\r\n        console.log(counter)\r\n        setTriggerChange(!triggerChange)\r\n\r\n        if (counter == 29) {\r\n            setTestCompleted(true)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const checkAnswer = () => {\r\n\r\n        \r\n    }\r\n\r\n\r\n  return (\r\n    <div className='quiz-question-container'>\r\n\r\n        <h2>{isLoading ? 'loading question...' : questions[quizOrder[counter]].question}</h2>\r\n        <button id='choiceA' value='choiceA' onClick={() => {\r\n            setCurrentChoice(choiceA.value)\r\n            console.log(questions[quizOrder[counter]].correctChoice + choiceA.value)\r\n            \r\n            if ('choiceA' == questions[quizOrder[counter].correctChoice]) {\r\n                console.log('You made the Correct Choice!')\r\n            } else {\r\n                console.log('someonething went wrong!')\r\n            }\r\n            console.log(currentChoice)\r\n        }}>{isLoading ? 'loading choice...' : questions[quizOrder[counter]].choiceA}</button>\r\n\r\n        <button id='choiceB' value='choiceB'>{isLoading ? 'loading choice...' : questions[quizOrder[counter]].choiceB}</button>\r\n        <button id='choiceC' value='choiceC'>{isLoading ? 'loading choice...' : questions[quizOrder[counter]].choiceC}</button>\r\n        <button id='choiceD' value='choiceD'>{isLoading ? 'loading choice...' : questions[quizOrder[counter]].choiceD}</button>\r\n\r\n        {testCompleted ? <button><a href='/completed'>Finish Quiz</a></button> : <button onClick={handleQuestionChange}>Next Question</button>}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Quiz"]},"metadata":{},"sourceType":"module"}